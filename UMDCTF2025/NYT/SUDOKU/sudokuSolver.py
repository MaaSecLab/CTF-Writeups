from z3 import Ints, Solver, sat

# Create 81 integer variables s0...s80
s = Ints(' '.join(f's{i}' for i in range(81)))
solver = Solver()

# Domain: each s[i] is 1..9
for var in s:
    solver.add(var >= 1, var <= 9)

# Chain of equalities and inequalities
solver.add(s[69] == s[68])
solver.add(s[68] > s[58], s[58] == s[26])
solver.add(s[58] > s[18], s[18] == s[43])
solver.add(s[18] > s[28], s[28] == s[48], s[48] == s[78])
solver.add(s[28] > s[5], s[5] == s[62], s[62] == s[72])
solver.add(s[5] > s[70], s[70] == s[51], s[51] == s[2])
solver.add(s[70] > s[31], s[31] == s[57])
solver.add(s[31] > s[41], s[41] == s[10])
solver.add(s[41] > s[24], s[24] == s[55], s[55] == s[36], s[36] == s[39])
solver.add(s[24] > 0)

# Pairwise not-equal chain
neq_chain = [
    23, 31, 53, 43, 24, 48, 74, 50, 29, 42, 7, 29, 44, 68, 67, 37, 48, 22, 28, 
    72, 13, 67, 65, 61, 35, 59, 54, 18, 53, 6, 72, 76, 64, 7, 33, 43, 61, 49, 
    65, 43, 37, 1, 65, 6, 31, 2, 9, 73, 60, 25, 26, 78, 76, 70, 16, 12, 17, 57, 
    48, 43, 35, 15, 80, 69, 52, 46, 63, 25, 17, 2, 66, 52, 9, 59, 8, 35, 67, 51, 
    55, 14, 75, 4, 14, 10, 5, 66, 47, 31, 43, 64, 44, 11, 2, 3, 52, 30, 27, 35, 
    32, 8, 20, 46, 4, 36, 71, 59, 5, 56, 17, 50, 25, 47, 11, 28, 30, 13, 7, 28, 
    42, 1, 25, 19, 71, 60, 8, 34, 64, 30, 76, 29, 41, 70, 15, 13, 60, 33, 71, 23, 
    2, 57, 78, 69, 33, 64, 79, 20, 44, 75, 30, 11, 3, 72, 15, 79, 41, 36, 32, 44, 
    71, 34, 50, 78, 12, 2, 73, 33, 8, 49, 24, 17, 21, 40, 30, 4, 72, 31, 40, 65, 
    8, 18, 75, 53, 14, 18, 4, 41, 17, 18, 23, 9, 71, 68, 55, 64, 32, 29, 75, 3, 
    23, 56, 25, 42, 32, 28, 10, 53, 4, 11, 0, 61, 27, 69, 25, 57, 58, 16, 50, 71, 
    13, 68, 1, 24, 41, 19, 78, 73, 39, 53, 37, 70, 13, 36, 20, 15, 49, 48, 77, 17, 
    8, 12, 19, 59, 20, 41, 76, 21, 16, 61, 44, 60, 62, 66, 22, 49, 35, 51, 49, 53, 
    40, 9, 27, 31, 11, 29, 37, 12, 18, 69, 2, 5, 18, 10, 4, 28, 9, 50, 46, 16, 48, 
    58, 0, 72, 10, 13, 79, 34, 9, 66, 17, 45, 75, 7, 15, 59, 50, 12, 74, 65, 51, 79, 
    33, 80, 78, 56, 57, 26, 80, 20, 4, 3, 31, 67, 36, 7, 51, 58, 63, 13, 54, 66, 8, 
    80, 47, 23, 69, 47, 73, 4, 79, 7, 44, 28, 66, 40, 55, 79, 43, 68, 40, 6, 27, 16, 
    26, 17, 76, 15, 36, 60, 67, 53, 24, 77, 51, 27, 22, 53, 73, 18, 57, 50, 26, 37, 
    58, 25, 12, 26, 70, 63, 45, 70, 12, 29, 28, 52, 22, 24, 45, 19, 56, 71, 67, 49, 
    68, 61, 77, 19, 23, 34, 33, 59, 34, 51, 43, 62, 59, 32, 75, 11, 6, 74, 70, 29, 
    46, 12, 54, 60, 26, 56, 58, 77, 1, 48, 53, 27, 40, 0, 47, 3, 6, 39, 40, 1, 14, 
    27, 28, 69, 30, 70, 42, 41, 52, 11, 32, 13, 61, 67, 24, 37, 21, 74, 1, 6, 47, 5, 
    50, 37, 16, 1, 55, 6, 21, 65, 32, 15, 10, 30, 22, 37, 31, 39, 77, 78, 21, 58, 42, 
    46, 76, 77, 16, 39, 75, 28, 3, 79, 52, 10, 64, 72, 47, 9, 69, 22, 6, 68, 51, 16, 
    29, 45, 32, 7, 62, 80, 49, 32, 20, 7, 55, 35, 16, 24, 78, 60, 69, 26, 74, 77, 35, 
    65, 14, 22, 39, 10, 73, 14, 74, 46, 38, 52, 20, 35, 39, 51, 64, 62, 34, 7, 45, 
    11, 23, 66, 12, 56, 63, 29, 26, 73, 5, 23, 72, 63, 30, 15, 44, 79, 38, 76, 45, 
    21, 41, 46, 37, 74, 24, 19, 34, 54, 36, 79, 32, 80, 71, 61, 55, 74, 58, 1, 38, 
    42, 45, 77, 27, 39, 14, 6, 23, 0, 22, 43, 55, 65, 15, 8, 62, 12, 57, 38, 4, 39, 
    18, 9, 5, 75, 52, 27, 58, 35, 80, 54, 71, 5, 53, 0, 3, 46, 79, 62, 54, 17, 62, 
    33, 47, 2, 6, 0, 39, 61, 60, 47, 78, 41, 77, 0, 16, 74, 29, 38, 58, 39, 5, 19, 
    21, 48, 63, 38, 56, 34, 60, 80, 34, 55, 21, 24, 31, 49, 55, 62, 51, 33, 78, 17, 
    19, 76, 24, 58, 61, 51, 0, 14, 5, 4, 52, 72, 75, 42, 63, 41, 3, 20, 13, 76, 63, 
    15, 64, 36, 68, 21, 1, 56, 59, 49, 37, 77, 21, 14, 40, 52, 36, 61, 54, 57, 8, 
    54, 67, 55, 33, 25, 48, 38, 25, 78, 45, 46, 36, 3, 30, 9, 19, 57, 66, 73, 69, 
    40, 28, 45, 38, 70, 10, 76, 42, 44, 54, 2, 62, 18, 47, 26, 46, 70, 64, 13, 44, 
    45, 41, 38, 20, 49, 43, 7, 11, 42, 57, 1, 63, 64, 20, 65, 68, 35, 0, 2, 72, 30, 
    66, 69, 5, 34, 43, 67, 22, 9, 56, 42, 48, 31, 22, 40, 74, 68, 14, 31, 0, 27, 66, 
    18, 2, 8, 71, 62, 57, 63, 10, 11, 72, 70, 50, 19, 26, 33, 54, 68, 60, 59, 65, 80, 
    73, 23, 50, 56, 48, 67, 44, 36, 38, 3, 10, 75, 73, 25, 80, 59, 23
]
for a, b in zip(neq_chain, neq_chain[1:]):
    solver.add(s[a] != s[b])

# Solve
if solver.check() == sat:
    m = solver.model()
    result = [m[var].as_long() for var in s]
    print('Solution:', ''.join(str(x) for x in result))

    # Verification of all conditions on the concrete solution
    def verify(seq):
        assert seq[69] == seq[68]
        assert seq[68] > seq[58] and seq[58] == seq[26]
        assert seq[58] > seq[18] and seq[18] == seq[43]
        assert seq[18] > seq[28] and seq[28] == seq[48] == seq[78]
        assert seq[28] > seq[5] and seq[5] == seq[62] == seq[72]
        assert seq[5] > seq[70] and seq[70] == seq[51] == seq[2]
        assert seq[70] > seq[31] and seq[31] == seq[57]
        assert seq[31] > seq[41] and seq[41] == seq[10]
        assert seq[41] > seq[24] and seq[24] == seq[55] == seq[36] == seq[39]
        assert seq[24] > 0
        for a, b in zip(neq_chain, neq_chain[1:]):
            assert seq[a] != seq[b]
        print('All conditions verified!')
    verify(result)
else:
    print('No solution')